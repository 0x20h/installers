{"name":"Installers","tagline":"A Multi-Framework Composer Library Installer","google":"UA-32631384-1","body":"[![Build Status](https://secure.travis-ci.org/composer/installers.png)](http://travis-ci.org/composer/installers)\r\n\r\nThis is for PHP package authors to require in their `composer.json`. It will\r\nmagically install their package to the correct location based on the specified\r\npackage type.\r\n\r\n**Current Supported Package Types**:\r\n\r\n* CakePHP 2+   `cakephp-`\r\n* CodeIgniter  `codeigniter-`\r\n* Drupal       `drupal-`\r\n* FuelPHP      `fuelphp-`\r\n* Joomla       `joomla-`\r\n* Laravel      `laravel-`\r\n* Lithium      `lithium-`\r\n* Magento      `magento-`\r\n* phpBB        `phpbb-`\r\n* PPI          `ppi-`\r\n* Symfony1     `symfony1-`\r\n* WordPress    `wordpress-`\r\n* Zend         `zend-`\r\n\r\n## Example `composer.json` File\r\n\r\nThis is an example for a CakePHP plugin. The only important parts to set in your\r\ncomposer.json file are `\"type\": \"cakephp-plugin\"` which describes what your\r\npackage is and `\"require\": { \"composer/installers\": \"*\" }` which tells composer\r\nto load the custom installers.\r\n\r\n``` json\r\n{\r\n    \"name\": \"you/ftp\",\r\n    \"type\": \"cakephp-plugin\",\r\n    \"require\": {\r\n        \"composer/installers\": \"*\"\r\n    }\r\n}\r\n```\r\n\r\nThis would install your package to the `app/Plugin/Ftp/` folder of a CakePHP app\r\nwhen a user runs `php composer.phar install`.\r\n\r\nSo submit your packages to [packagist.org](http://packagist.org)!\r\n\r\n## Current Supported Types\r\n\r\n* CakePHP\r\n    * cakephp-app\r\n    * cakephp-plugin\r\n    * cakephp-lib\r\n    * cakephp-vendor\r\n    * cakephp-model\r\n    * cakephp-behavior\r\n    * cakephp-controller\r\n    * cakephp-component\r\n    * cakephp-helper\r\n    * cakephp-theme\r\n* CodeIgniter\r\n    * codeigniter-app\r\n    * codeigniter-library\r\n    * codeigniter-controller\r\n    * codeigniter-third-party\r\n    * codeigniter-model\r\n    * codeigniter-helper\r\n* Drupal\r\n    * drupal-module\r\n    * drupal-theme\r\n* FuelPHP\r\n    * fuelphp-app\r\n    * fuelphp-module\r\n* Joomla\r\n    * joomla-component\r\n    * joomla-module\r\n    * joomla-template\r\n    * joomla-plugin\r\n    * joomla-library\r\n* Laravel\r\n    * laravel-app\r\n    * laravel-library\r\n* Lithium\r\n    * lithium-app\r\n    * lithium-library\r\n    * lithium-source\r\n* Magento\r\n    * magento-library\r\n    * magento-skin\r\n    * magento-theme\r\n* phpBB\r\n    * phpbb-extension\r\n* PPI\r\n    * ppi-module\r\n* symfony1\r\n    * symfony1-plugin\r\n* WordPress\r\n    * wordpress-plugin\r\n    * wordpress-theme\r\n* Zend\r\n    * zend-library\r\n    * zend-extra\r\n\r\n## Contribute!\r\n\r\n* [Fork and clone](https://help.github.com/articles/fork-a-repo).\r\n* Run the command `php composer.phar install --dev` to install the dev\r\n  dependencies. See [Composer](https://github.com/composer/composer#installation--usage).\r\n* Use the command `phpunit` to run the tests. See [PHPUnit](http://phpunit.de).\r\n* Create a branch, commit, push and send us a\r\n  [pull request](https://help.github.com/articles/using-pull-requests).\r\n\r\nTo ensure a consistent code base, you should make sure the code follows the\r\n[Coding Standards](http://symfony.com/doc/2.0/contributing/code/standards.html)\r\nwhich we borrowed from Symfony.\r\n\r\nIf you would like to help, please take a look at the list of\r\n[issues](https://github.com/composer/installers/issues).\r\n\r\n","note":"Don't delete this file! It's used internally to help with page regeneration."}